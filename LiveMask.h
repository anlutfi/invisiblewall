#ifndef __LIVE_MASK_H__
#define __LIVE_MASK_H__

#include "commons.h"

#include "MakeFrame.h"
#include <opencv2/videoio.hpp>
#include <opencv2/opencv.hpp>

#define CAMGUARD_STEP 10
//#define CAMGUARD_SIZE 40


using namespace cv;

/*
int liveMask(cv::Mat control, cv::VideoCapture interaction, cv::VideoCapture fill, int threshold);

Function to make and display a live feed from "fill" through a mask generated by the difference
between a frame from "interaction" and the "control" image

This is where the invisible wall actually happens. The simplified algorithm is as follows:

1 - Let INTERACTION be the feed from the camera inside the interaction room.
    Let FILL be the feed from the other side
    
2 - Make a control image CTR, a snapshot from the interaction room without anyone in it.

3 - WHILE the user does not cancel:
    3.1 - take a frame INTERACTIONFRAME from INTERACTION
    3.2 - get the absolute difference DIFF between CTR and INTERACTIONFRAME
    3.3 - make a black image MASK
    3.3 - FOR each pixel in DIFF
          IF any of the pixel's components(RGB) is larger than THRESHOLD,
          set to white the corresponding pixel in MASK
    3.4 - reduce MASK's noise with median blur
    3.5 - adjust MASK's offset
    
    3.6 - take a frame FILLFRAME from FILL
    3.7 - apply MASK to FILLFRAME and display the result on screen
*/
int liveMask(cv::VideoCapture interaction,
             cv::VideoCapture fill,
             cv::Size desiredres,
             void (*reorientInteraction)(cv::Mat),
             void (*reorientFill)(cv::Mat),
             unsigned char* threshold,
             int* blurkernelsize,
             int offsetstep,
             int* maskoffsetx,
             int* maskoffsety,
             cv::VideoWriter* video,
             cv::Size camguardsize
            );


#endif

